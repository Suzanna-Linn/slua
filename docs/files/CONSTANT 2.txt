function constantTable(data)
    local mt = {
        __index = data,
        __newindex = function(t, key, value)
            if value == nil then
              if data[key] ~= nil then
                print(`Not allowed to delete key {key} ({data[key]})`)
              end
            else
              if data[key] ~= nil then
                print(`Not allowed to set key {key} ({data[key]}) to {value}`)
              else
                print(`Not allowed to add key {key} ({data[key]}) with {value}`)
              end
            end
        end,
        __metatable = "Not allowed to access the metatable"
    }
    return setmetatable({}, mt)
end

SEASONS = constantTable{ WINTER = 1, SPRING = 2, SUMMER =3, AUTUMN = 4 }

SEASONS["WINTER"] = 5  -- Not allowed to set WINTER (1) to 5
SEASONS["WINTER"] = nil  -- Not allowed to delete key WINTER (1)
SEASONS["DUSKHOLLOW"] = 5   -- Not allowed to add key DUSKHOLLOW (nil) with 5
print(SEASONS.WINTER)  -- 1

--[[ with __metatable = nil
datatab = getmetatable(SEASONS).__index
datatab.WINTER = 5
print(SEASONS.WINTER)  -- 5
]]--

print(getmetatable(SEASONS))  -- Not allowed to acces the metatable
