
practice1 = "Create a dictionary with 4 key-value pairs"

-- Each key is a pet type, each value is how many of that pet the shelter has
local shelter = {
    dogs = 6,
    cats = 8,
    rabbits = 3,
    parrots = 2
}



practice2 = "Add two more keys, one of them including spaces"

shelter.hamsters = 5
shelter["tropical fish"] = 12



practice3 = "Modify a value, doubling it"

shelter.dogs = shelter.dogs * 2
-- shelter.dogs *= 2  -- alternative way



practice4 = "Remove a key"

shelter.parrots = nil



practice5 = "Print the table"

print("Current shelter inventory:")
for pet, numPets in pairs(shelter) do
    print(pet, numPets)
end



practice6 = [[
        Write a function to check if a key exists
	- parameter 1 : the table
	- parameter 2 : the key
	- return : true or false
]]

function petExists(tbl, pet)
    return tbl[pet] ~= nil
end

print("Does 'cats' exist?", petExists(shelter, "cats"))
print("Does 'snakes' exist?", petExists(shelter, "snakes"))



practice7 = [[
        Write a function to check if a value exists
	- parameter 1 : the table
	- parameter 2 : the value
	- return : true or false
]]

function countExists(tbl, value)
    for _, numPets in pairs(tbl) do
        if numPets == value then
            return true
        end
    end
    return false
end

print("Is there a pet type with count 8?", countExists(shelter, 8))
print("Is there a pet type with count 99?", countExists(shelter, 99))



practice8 = "Count how many keys the table has"

function totalPetTypes(tbl)
    local count = 0
    for _ in pairs(tbl) do
        count = count + 1
    end
    return count
end

print("The shelter currently has " .. totalPetTypes(shelter) .. " pet types.")



nested = [[ nested table for next practices ]]

local shelter = {
    -- General info about the shelter
    info = {
        name = "Happy Tails Shelter",
        location = "Riverdale",
        open_hours = { "Mon-Fri", "10:00-18:00" },
        staff = {
            manager = "Alice",
            volunteers = { "Bob", "Clara", "Dylan" }
        }
    },

    -- Pets section: dictionary of species
    pets = {
        dogs = {
            count = 8,
            breeds = { "Labrador", "Beagle", "Poodle" },
            vaccinated = true
        },
        cats = {
            count = 6,
            breeds = { "Siamese", "Maine Coon" },
            vaccinated = true
        },
        rabbits = {
            count = 4,
            breeds = { "Lop", "Rex" },
            vaccinated = false
        },
        ["tropical fish"] = {
            count = 15,
            species = { "Guppy", "Goldfish", "Betta" },
            vaccinated = false
        }
    },

    -- Adoption records (array of dictionaries)
    adoptions = {
        { pet = "dog", adopter = "Emma", date = "2025-10-01" },
        { pet = "cat", adopter = "Lucas", date = "2025-10-12" }
    }
}



practice9 = "Complete the print functions replacing nil"

print("Shelter name:", nil)
print("Manager:", nil)
print("First volunteer:", nil)
print("Dog breeds:", nil)
print("First adoption pet type:", nil)
print("Number of cats:", nil)
print("Number of tropical fish:", nil)

print("Shelter name:", shelter.info.name)
print("Manager:", shelter.info.staff.manager)
print("First volunteer:", shelter.info.staff.volunteers[1])
print("Dog breeds:", table.concat(shelter.pets.dogs.breeds, ", "))
print("First adoption pet type:", shelter.adoptions[1].pet)
print("Number of cats:", shelter.pets.cats.count)
print("Number of tropical fish:", shelter.pets["tropical fish"].count)



practice10 = "Add a new pet type and print its quantity"

shelter.pets.hamsters = {
    count = 5,
    breeds = { "Syrian", "Dwarf" },
    vaccinated = true
}

print("Hamsters added. Total hamsters:", shelter.pets.hamsters.count)



practice11 = "Insert a volunteer name and print all the volunteers"

table.insert(shelter.info.staff.volunteers, "Elena")

print("Updated volunteer list:")
for _, volunteer in ipairs(shelter.info.staff.volunteers) do
    print(volunteer)
end



practice12 = "Add a new adoptions record and print all the adoptions"

table.insert(shelter.adoptions, { pet = "rabbit", adopter = "Noah", date = "2025-10-24" })

print("Adoption records:")
for i, adoption in ipairs(shelter.adoptions) do
    print(i .. ".", adoption.adopter, "adopted a", adoption.pet, "on", adoption.date)
end



practice13 = "Loop through all pet species and print their breeds or species lists"

for petType, petData in pairs(shelter.pets) do
    print(petType .. ":")
    if petData.breeds then
        print("  Breeds:", table.concat(petData.breeds, ", "))
    elseif petData.species then
        print("  Species:", table.concat(petData.species, ", "))
    end
end



practice14 = "Count how many total animals are in the shelter"

local total = 0
for _, petData in pairs(shelter.pets) do
    total = total + petData.count
end
print("Total animals in shelter:", total)
