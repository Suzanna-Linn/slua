
practice1 = [[
Display all even numbers between 2 and 20 (inclusive).
]]

for i = 2, 20, 2 do
    print(i)
end



practice2 = [[
Calculate and print the sum of all numbers from 1 to 100.
]]

local sum = 0
for i = 1, 100 do
    sum += i
end
print("Sum = " .. sum)



practice3 = [[
Keep doubling a number starting from 1, and stop when it becomes greater than 1000.
Print each intermediate value.
]]

local n = 1
while n <= 1000 do
    print(n)
    n = n * 2
end



practice4 = [[
Write a function with two numeric parameters that returns the first number greater than parameter1 that is divisible by parameter2.
]]

function firstDivisible(min, div)
    local n = min + 1
    while n % div ~= 0 do
        n += 1
    end
    return n
end

print(firstDivisible(100, 7))   -- > 105
print(firstDivisible(25, 6))    -- > 30



practice5 = [[
With a table like:
    local numbers = {4, 9, 2, 16, 7, 10}
Print only the numbers that are greater than or equal to 10.
]]

local numbers = {4, 9, 2, 16, 7, 10}

for _, value in ipairs(numbers) do
    if value >= 10 then
        print(value)
    end
end



practice6 = [[
With a table like:
    local weirdFacts = {
        ["catsOwned"] = 7,
        ["favoriteSnack"] = "spaghetti tacos",
        ["hoursOfSleep"] = 13,
        ["bestSuperpower"] = "turning coffee into code",
        ["numberOfTabsOpen"] = 42,
        ["mood"] = "debugging noises",
        ["secretPassword"] = "1234 (definitely secure)",
        ["levelOfMotivation"] = 10.5
    }
Write a function that takes a table and returns the total of the values that are numbers.
]]

local weirdFacts = {
    ["catsOwned"] = 7,
    ["favoriteSnack"] = "spaghetti tacos",
    ["hoursOfSleep"] = 13,
    ["bestSuperpower"] = "turning coffee into code",
    ["numberOfTabsOpen"] = 42,
    ["mood"] = "debugging noises",
    ["secretPassword"] = "1234 (definitely secure)",
    ["levelOfMotivation"] = 10.5
}

function sumNumbers(t)
    local total = 0
    for _, value in pairs(t) do
        if type(value) == "number" then
            total = total + value
        end
    end
    return total
end

print("Total numeric values = " .. sumNumbers(weirdFacts))



practice7 = [[
With a table like:
    local animals = {"cat", "dog", "bird", "fish"}
Write a function that takes a table and returns another table in reverse order.
Print the reversed table.
]]

local animals = {"cat", "dog", "bird", "fish"}

function reverseTable(t)
    local reversed = {}
    for i = #t, 1, -1 do
        table.insert(reversed, t[i])
    end
    return reversed
end

local rev = reverseTable(animals)
for _, v in ipairs(rev) do
    print(v)
end



practice8 = [[
Print numbers from 1 to 15, but skip any number that’s divisible by 4.
]]

for i = 1, 15 do
    if i % 4 == 0 then
        continue
    end
    print(i)
end



practice9 = [[
Simulate rolling a dice with math.random(1,6) until you get a 6.
Count how many rolls it took and print the count.
Start the script with math.randomseed(os.time()) to tandomize the random number generator.
]]

math.randomseed(os.time())
local count = 0

repeat
	local roll = math.random(1, 6)
	count += 1
until roll == 6

print(`It took {count} rolls to get a 6.`)



practice10 = [[
Print a 5×5 grid of numbers like this:
    1 2 3 4 5
    1 2 3 4 5
    1 2 3 4 5
    1 2 3 4 5
    1 2 3 4 5
]]

for row = 1, 5 do
    local line = ""
    for col = 1, 5 do
        line ..= col .. " "
    end
    print(line)
end



practice11 = [[
Print the multiplication tables from 1 to 10
]]

for i = 1, 10 do
    for j = 1, 10 do
        print(`{i} x {j} = {(i * j)}`)
    end
    print("-----")
end



practice12 = [[
Calculate how many of the possible dice rolls add up to 7.
]]

local count = 0
for dice1 = 1, 6 do
    for dice2 = 1, 6 do
        if dice1 + dice2 == 7 then
            count += 1
        end
    end
end
print(`There are {count} ways to roll a total of 7.`)
