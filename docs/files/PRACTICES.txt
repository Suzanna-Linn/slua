-- table with lowercase keys
local scandinavia = {
    denmark = "copenhagen",
    norway = "oslo",
    sweden = "stockholm",
    iceland = "reykjavik",
    greenland = "nuuk",
    faroe = "torshavn",
}

setmetatable(scandinavia, {
  __index = function(t, k)
    return rawget(t, k:lower())
  end
})



-- tables with people in each one
local staff = { [uuid("0f16c0e1-384e-4b5f-b7ce-886dda3bce41")] = "suzannalinn" }
local friends = { [uuid("ebff743c-5e47-400a-8ea6-a3bdb417b457")] = "sungali" }
local vips = { [uuid("a1f62da5-dfab-4bfa-a918-75519517b753")] = "sungmanitu" }
local subscribers = { [uuid("552e76a0-8ed8-499f-ba2e-0ab1ba0fa018")] = "suzannalinn2" }

-- empty table
local allOfThem = {}

local allRoles = {
  staff = staff,
  friend = friends,
  vip = vips,
  subscriber = subscribers
}

setmetatable(allOfThem, {
  __index = function(t, k)
    local roles = {}
    for role, tabRole in allRoles do
      if tabRole[k] then
        table.insert(roles, role)
      end
    end
    return roles
  end,
})



local fib = { [1] = 1, [2] = 1 }

setmetatable(fib, {
  __index = function(t, n)
    if type(n) ~= "number" or n < 1 or n % 1 ~= 0 then
      print("Index must be a positive integer.")
      return
    end
    local value = t[n-2] + t[n-1]
    rawset(t, n, value)
    return value
  end
})


--[[
    practice 1

    write a metatable for the table "scandinavia" that returns the capitals
    when reading a country written in any lettercase, like Denmark or NORWAY
]]

-- table with lowercase keys
local scandinavia = {
    denmark = "copenhagen",
    norway = "oslo",
    sweden = "stockholm",
    iceland = "reykjavik",
    greenland = "nuuk",
    faroe = "torshavn",
}



--[[
    practice 2

    write a metatable for the table "allOfThem" that returns an array with
    the names of the roles of the uuid when reading an uuid in "allOfThem"
    (add users to different roles to test it)
]]

-- tables with people in each one
local staff = { [uuid("0f16c0e1-384e-4b5f-b7ce-886dda3bce41")] = "suzannalinn" }
local friends = { [uuid("ebff743c-5e47-400a-8ea6-a3bdb417b457")] = "sungali" }
local vips = { [uuid("a1f62da5-dfab-4bfa-a918-75519517b753")] = "sungmanitu" }
local subscribers = { [uuid("552e76a0-8ed8-499f-ba2e-0ab1ba0fa018")] = "suzannalinn2" }

-- empty table
local allOfThem = {}



--[[
    practice 3

    write a metatable for the table "fib" that returns the fibonacci number
    and stores in the table all fibonnacci numbers lowere than it
    (for instance, fib(10) will store all the fibonacci numbers from 3 to 10)
]]

local fib = { [1] = 1, [2] = 1 }


