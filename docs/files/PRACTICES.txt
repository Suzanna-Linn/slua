
practice1 = 'create an array with 4 values (strings only, not numbers or anything else)'

local petAnimals = {"dog", "cat", "fish", "bird"}



practice2 = 'print the elements in the array separated with commas'

print("Pets separated by commas:", table.concat(petAnimals, ", "))
-- > dog, cat, fish, bird



practice3 = 'insert a new value at the start and another at the end'

table.insert(petAnimals, 1, "hamster")
table.insert(petAnimals, "koala")
print("After inserting at start and end:", table.concat(petAnimals, ", "))
-- >  hamster, dog, cat, fish, bird, koala



practice4 = 'sort the table alphabetically in ascending order'

table.sort(petAnimals)
print("After sorting alphabetically:", table.concat(petAnimals, ", "))
-- >  bird, cat, dog, fish, hamster, koala



practice5 = 'remove the third value and print the removed value'

local removedPet = table.remove(petAnimals, 3)
print("Removed ('" .. removedPet .. "')")
-- >  dog
print("After removing:", table.concat(petAnimals, ", "))
-- >  bird, cat, fish, hamster, koala



practice6 = [[
	write a function to insert a value in the middle'
	- parameter 1 : the table
	- parameter 2 : the new value
	- return : the index where the value has been inserted
]]

local function insertInMiddle(t, newValue)
    local middleIndex = #t // 2 + 1
    table.insert(t, middleIndex, newValue)
    return middleIndex
end

local insertedIndex = insertInMiddle(petAnimals, "turtle")
print("Inserted in the middle at index " .. insertedIndex)
-- > 3
print("After inserting in the middle:", table.concat(petAnimals, ", "))
-- >  bird, cat, turtle, fish, hamster, koala



practice7 = [[
	write a function to remove a value
	- parameter 1 : the table
	. parameter 2 : the value to remove (the value, not the index)
	- return : true (value has been removed) or false (value didn't exist)
]]

local function removeValue(t, valueToRemove)
    local indexToRemove = table.find(t, valueToRemove)
    if indexToRemove then
        table.remove(t, indexToRemove)
        return true
    else
        return false
    end
end

local removedSuccessfully = removeValue(petAnimals, "hamster")
print("Attempted to remove: " .. tostring(removedSuccessfully))
-- > true
print("After attempting to remove:", table.concat(petAnimals, ", "))
-- >  bird, cat, turtle, fish, koala

removedSuccessfully = removeValue(petAnimals, "lion")
print("Attempted to remove: " .. tostring(removedSuccessfully))
-- > false
print("After attempting to remove:", table.concat(petAnimals, ", "))
-- >  bird, cat, turtle, fish, koala



practice8 = [[
	write a function to insert a new value after an existing value
	- parameter 1 : the table
	- parameter 2 : the existing value (insert after it)
	- parameter 3 : the new value (insert at the end if existing value don't exist)
	- return : the position where the value has been inserted
]]

local function insertAfterExisting(t, existingValue, newValue)
    local existingIndex = table.find(t, existingValue)
    if existingIndex then
        table.insert(t, existingIndex + 1, newValue)
        return existingIndex + 1
    else
        table.insert(t, newValue)
        return #t
    end
end

local insertedPos = insertAfterExisting(petAnimals, "turtle", "rabbit")
print("Inserted at index " .. insertedPos)
-- > 4
print("After inserting:", table.concat(petAnimals, ", "))
-- >  bird, cat, turtle, rabbit, fish, koala

insertedPos = insertAfterExisting(petAnimals, "bear", "hedgehog") 
print("Inserted at index " .. insertedPos)
-- > 7
print("After inserting:", table.concat(petAnimals, ", "))
-- >  bird, cat, turtle, rabbit, fish, koala, hedgehog



practice9 = [[
	write a function that returns a new table with part of the table
	- parameter 1 : the table
	- parameter 2 : the first index to return
	- parameter 3 : the last index to return
	- return : a table with the selected indexes
]]

local function getSubTable(t, startIndex, endIndex)
    local newTable = {}
    table.move(t, startIndex, endIndex, 1, newTable)
    return newTable
    -- or the same in one line:
    -- return table.move(t, startIndex, endIndex, 1, {})
end

local subList = getSubTable(petAnimals, 2, 5)
print("Sub-table :", table.concat(subList, ", "))
-- >  cat, turtle, rabbit, fish


practice10 = 'remove all the elements in the table'

petAnimals = {}

print("After removing all:", table.concat(petAnimals, ", "))
-- >
